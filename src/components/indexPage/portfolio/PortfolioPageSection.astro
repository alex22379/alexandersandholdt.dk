---
import { Icon } from 'astro-icon';
import Case from './PortfolioCase.astro';
import { getCollection } from 'astro:content';

const portfolioCases = await getCollection('portfolioCase');

import { getLangFromUrl, useTranslations } from '../../../modules/i18n';
const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);
---

<section id="portfolio" class="page-section">
  <div class="container flow | my-32">
    <div class="text-center">
      <h2 class="fs-700 fw-bold">{t('portfolio.title')}</h2>
      <p>{t('portfolio.subtitle')}</p>
    </div>
    <div class="cases-slider">
      <button class="chevron left"
        ><Icon name="mdi:chevron-left" width="110" /></button
      >
      <div class="cases-wrapper">
        <div class="cases">
          {portfolioCases.map((c) => <Case portfolioCase={c} />)}
        </div>
      </div>
      <button class="chevron right"
        ><Icon name="mdi:chevron-right" width="110" />
      </button>
    </div>
  </div>

  <style lang="scss">
    @use '/../src/styles/abstracts' as *;
    .cases-slider {
      display: flex;
      justify-content: center;
      align-items: center;
      gap: size(4);

      .chevron {
        background: none;
        border: none;
        outline: none;
        cursor: pointer;

        display: none;

        @include mq(lg) {
          display: initial;
        }
      }

      .cases-wrapper {
        overflow: hidden;

        .cases {
          display: flex;
          gap: size(4);
          overflow-x: auto;
          scroll-snap-type: x mandatory;
          &::-webkit-scrollbar {
            display: none;
          }
          padding-top: size(1);
        }
      }
    }
  </style>

  <script>
    const cases = document.querySelector('.cases');
    const left = document.querySelector('.left');
    const right = document.querySelector('.right');

    left?.addEventListener('click', (e) => {
      cases?.scrollBy({ left: -200, behavior: 'smooth' });
      //document.querySelector('#case-4')?.scrollIntoView(false, {behavior: 'smooth' });
    });

    right?.addEventListener('click', (e) => {
      cases?.scrollBy({ left: 200, behavior: 'smooth' });
    });

    import isTouchEnabled from '../../../scripts/isTouchEnabled.js';

    if (isTouchEnabled()) {
      const scrollItems = document.querySelectorAll('.case');

      const observerOptions = {
        root: document.querySelector('.cases'),
        rootMargin: '0px',
        threshold: 0.5, // Adjust this threshold as needed
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            // The item is in focus, you can apply focus styles or perform other actions here.
            entry.target.classList.add('hover');
          } else {
            entry.target.classList.remove('hover');
          }
        });
      }, observerOptions);

      scrollItems.forEach((item) => {
        observer.observe(item);
      });
    }
  </script>
</section>
