---
import EducationTab from './EducationTab.astro';
import TabButton from './TabButton.astro';
import BioTab from './BioTab.astro';
import ToolsTab from './ToolsTab.astro';
import {
  getLangFromUrl,
  useTranslations,
} from '../../../modules/i18n/index.mts';

const t = useTranslations(getLangFromUrl(Astro.url));
---

<section id="profile" class="page-section">
  <div class="profile-container | container | clr-neutral-000 my-44">
    <div class="portrait">
      <div class="portrait-wrapper">
        <img
          src="/img/portrait.jpg"
          alt="Alexander Sandholdt August 2023 3.G"
        />
      </div>
    </div>

    <div class="tabs | flow">
      <a class="download-resume" href="/" download="Alexander Sandholdt CV.pdf"
        ><i class="mr-0.5 | fa-solid fa-download"></i>Download CV (pdf)</a
      >
      <nav class="tab-buttons">
        <TabButton name={t('profile.tabTitles.bio')} target="bio" />
        <TabButton name={t('profile.tabTitles.education')} target="education" />
        <TabButton name={t('profile.tabTitles.tools')} target="tools" />
      </nav>

      <div class="tab-windows">
        <BioTab />
        <EducationTab />
        <ToolsTab />
      </div>
    </div>
  </div>

  <div class="custom-shape-divider-top-1690840359">
    <svg
      data-name="Layer 1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 1200 120"
      preserveAspectRatio="none"
    >
      <path
        d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"
        opacity=".25"
        class="shape-fill"></path>
      <path
        d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z"
        opacity=".5"
        class="shape-fill"></path>
      <path
        d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"
        class="shape-fill"></path>
    </svg>
  </div>
  <div class="custom-shape-divider-bottom-1690842394">
    <svg
      data-name="Layer 1"
      xmlns="http://www.w3.org/2000/svg"
      viewBox="0 0 1200 120"
      preserveAspectRatio="none"
    >
      <path
        d="M0,0V46.29c47.79,22.2,103.59,32.17,158,28,70.36-5.37,136.33-33.31,206.8-37.5C438.64,32.43,512.34,53.67,583,72.05c69.27,18,138.3,24.88,209.4,13.08,36.15-6,69.85-17.84,104.45-29.34C989.49,25,1113-14.29,1200,52.47V0Z"
        opacity=".25"
        class="shape-fill"></path>
      <path
        d="M0,0V15.81C13,36.92,27.64,56.86,47.69,72.05,99.41,111.27,165,111,224.58,91.58c31.15-10.15,60.09-26.07,89.67-39.8,40.92-19,84.73-46,130.83-49.67,36.26-2.85,70.9,9.42,98.6,31.56,31.77,25.39,62.32,62,103.63,73,40.44,10.79,81.35-6.69,119.13-24.28s75.16-39,116.92-43.05c59.73-5.85,113.28,22.88,168.9,38.84,30.2,8.66,59,6.17,87.09-7.5,22.43-10.89,48-26.93,60.65-49.24V0Z"
        opacity=".5"
        class="shape-fill"></path>
      <path
        d="M0,0V5.63C149.93,59,314.09,71.32,475.83,42.57c43-7.64,84.23-20.12,127.61-26.46,59-8.63,112.48,12.24,165.56,35.4C827.93,77.22,886,95.24,951.2,90c86.53-7,172.46-45.71,248.8-84.81V0Z"
        class="shape-fill"></path>
    </svg>
  </div>
</section>

<style lang="scss">
  @use '/../src/styles/abstracts' as *;

  #profile {
    background: color(neutral, '150');

    .profile-container {
      display: grid;
      --cols: 4;
      grid-template-columns: repeat(var(--cols), 1fr);
      grid-gap: size(4);
      justify-content: center;

      @include mq(md) {
        --cols: 8;
      }

      @include mq(lg) {
        --cols: 12;
      }
    }

    .portrait {
      --span: 4;
      grid-column-end: span var(--span);

      @include mq(md) {
        grid-column-start: 3;
      }

      @include mq(lg) {
        grid-column-start: initial;
      }

      .portrait-wrapper {
        overflow: hidden;
        transition: all 450ms ease-out;
        box-shadow: $box-shadow-3;

        img {
          transform: scale(103%);
          transition:
            filter 300ms linear,
            transform 600ms ease;
        }

        &:hover img {
          filter: grayscale(100%);
          transform: scale(102%);
        }

        border-radius: 3rem 3rem 1.5rem 1.5rem;
        @include mq(lg) {
          border-radius: 6rem 1.5rem 1.5rem 1.5rem;

          &:hover {
            border-radius: 5rem 1.5rem 1.5rem 1.5rem;
          }
        }
      }
    }

    .tabs {
      --flow-space: 0.175rem;
      --span: 4;
      grid-column: span var(--span);

      @include mq(md) {
        --span: 8;
      }

      .download-resume {
        padding-bottom: size(1);
        font-size: font-size(150);
        color: color(brand, 900);
        display: block;
        line-height: normal;
      }

      .tab-buttons {
        display: flex;
        flex-wrap: wrap;
        align-items: center;
        gap: 0.25em;
        margin-bottom: size(1);
      }

      .tab-windows {
      }
    }
  }

  .custom-shape-divider-top-1690840359 {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
  }

  .custom-shape-divider-top-1690840359 svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 50px;
    @include mq(md) {
      height: calc(50px * 1.5);
    }
    @include mq(lg) {
      height: calc(50px * 2);
    }
  }

  .custom-shape-divider-top-1690840359 .shape-fill {
    fill: $body-background-color;
  }
  .custom-shape-divider-bottom-1690842394 {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    overflow: hidden;
    line-height: 0;
    transform: rotate(180deg);
  }

  .custom-shape-divider-bottom-1690842394 svg {
    position: relative;
    display: block;
    width: calc(100% + 1.3px);
    height: 67.5px;
    @include mq(md) {
      height: calc(67.5px * 1.5);
    }
    @include mq(lg) {
      height: calc(67.5px * 2);
    }
  }

  .custom-shape-divider-bottom-1690842394 .shape-fill {
    fill: $body-background-color;
  }
</style>

<script>
  const tabButtons: NodeListOf<HTMLElement> =
      document.querySelectorAll('.tab-button'),
    tabWindows = document.querySelectorAll('.tab-window');

  tabButtons.forEach((t: HTMLElement) => {
    t.addEventListener('click', (e) => {
      const tabTarget = t.dataset.tabTarget;
      openTab(tabTarget);
      tabButtons.forEach((b) => b.classList.remove('active'));
      t.classList.add('active');
    });
    t.click();
  });

  tabButtons[0].click();

  function openTab(tab) {
    tabWindows.forEach((t: HTMLElement) => {
      const tabId = t.dataset.tabId;
      let display = 'none';
      if (tabId === tab) display = 'block';
      t.style.display = display;
    });
  }
</script>
