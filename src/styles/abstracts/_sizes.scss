@use 'sass:map';
@use 'sass:meta';

// for creating utility-classes: @each $size-step,$size-value in vars.$sizes {}
// Retrieve specific size for code-use: size($step)

$sizes: ();

$steps-in-unit: calc(1 / 4); // 1 step should be fourth of a rem
$total-steps: 24 * 4; // We want 24 rems of spacing with 4 steps being 1 rem
$step-base: 0.25; // We want the ability of half steps aswell
@for $i
  from calc($total-steps / $step-base * -1)
  through calc($total-steps / $step-base)
{
  $loop-step: $step-base * $i;
  $map: map.merge(
    $sizes,
    (
      $loop-step: $loop-step * $steps-in-unit,
    )
  );
  $sizes: $map !global;
}

@function size($step, $em: false) {
  @if map.has-key($sizes, $step) {
    @if ($em) {
      @return map.get($sizes, $step) + 0em;
    } @else {
      @return map.get($sizes, $step) + 0rem;
    }
  } @else {
    @error '$sizes does not have that step!';
  }
}
